function getDeviceId() {
    if (window.localStorage) {
        var devid = localStorage.getItem("devid");
        if (!devid) {
            localStorage.setItem("devid", _uuid());
            devid = localStorage.getItem("devid")
        }
        return devid
    }

    function _uuid() {
        var d = Date.now();
        if (typeof performance !== "undefined" && typeof performance.now === "function") {
            d += performance.now()
        }
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
            var r = (d + Math.random() * 16) % 16 | 0;
            d = Math.floor(d / 16);
            return (c === "x" ? r : (r & 3 | 8)).toString(16)
        })
    }
}
getDeviceId();
(function (_ok) {
    var ajax = {
        ajaxUrl: null,
        get: function (config) {
            return request({
                type: "get"
            }, config)
        },
        post: function (config) {
            return request({
                type: "post"
            }, config)
        }
    };

    function getAjaxUrl() {
        var url = location.protocol + "//" + location.host;
        if (location.host.indexOf("local.okex") > -1) {
            url = "http://coinmainweb.new.docker.okex.com"
        }
        return url
    }
    var request = function (innerConfig, config) {
        var _cfg = _ok.extend(true, {}, {
            url: config.url,
            type: innerConfig.type || "GET",
            data: innerConfig.data || {},
            headers: {
                "devId": getDeviceId()
            },
        }, config);
        var okGlobal = window.okGlobal || {};
        if (okGlobal.cdnBaseUrl && okGlobal.envSign === 'prod') {
          _cfg.headers['x-cdn'] = okGlobal.cdnBaseUrl;
        }
        var options = {
            url: (ajax.ajaxUrl ? ajax.ajaxUrl : getAjaxUrl()) + _cfg.url,
            type: _cfg.type,
            data: _cfg.type.toUpperCase() == "POST" ? JSON.stringify(_cfg.data) : _cfg.data,
            contentType: _cfg.contentType,
            headers: _cfg.headers,
            success: function (response, textStatus, request) {
                if (!response) {
                    return
                }
                var newToken = request.getResponseHeader("x-ok-token");
                if (newToken && newToken.length) {
                    localStorage.setItem("token", newToken)
                }
                if ("code" in response) {
                    if (response.code === 0) {
                        _cfg.success ? _cfg.success(response.data) : ""
                    } else {
                        _cfg.fail ? _cfg.fail(response.msg, response.code) : ""
                    }
                } else {
                    if (_cfg.success) {
                        if (typeof response == "string") {
                            response = JSON.parse(response)
                        }
                        _cfg.success(response)
                    }
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                _cfg.fail ? _cfg.fail(textStatus, xhr.status) : ""
            }
        };
        if (_cfg.beforeSend) {
            options.beforeSend = _cfg.beforeSend
        }
        if (_cfg.complete) {
            options.complete = _cfg.complete
        }
        var xhr = _ok.ajax(options);
        return xhr
    };
    if (typeof define === "function" && define.amd) {
        define(["jquery"], function () {
            return ajax
        })
    } else {
        window.ajax = ajax
    }
})(typeof ok$ !== "undefined" ? ok$ : jQuery);